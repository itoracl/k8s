- hosts: k8s
  roles:
    - role: k8s
    - role: postgress
  become: yes
  tasks:
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16
      args:
        chdir: $HOME
        creates: /etc/kubernetes/admin.conf
      register: kubeadm

    - debug: 
        var: kubeadm.stdout_lines

    - name: create .kube directory
      become: yes
      become_user: cloudshell 
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/cloudshell/.kube/config
        remote_src: yes
        owner: cloudshell
        mode: 0700

    - name: install Pod network
      become: yes
      become_user: cloudshell
      shell: kubectl apply -f ~/kube/kube-flannel.yml 
      args:
        chdir: $HOME

    - name: Install dashboard helm chart from a repo specifying path
      become: yes
      become_user: cloudshell
      kubernetes.core.helm:
        chart_repo_url: https://kubernetes.github.io/dashboard/
        chart_ref: kubernetes-dashboard
        state: present
        name: kubernetes-dashboard
        namespace: kubernetes-dashboard
        create_namespace: true

    - name: Install ingress controller helm chart from a repo specifying path
      become: yes
      become_user: cloudshell
      kubernetes.core.helm:
        chart_repo_url: https://kubernetes.github.io/ingress-nginx
        chart_ref: ingress-nginx
        state: present
        name: ingress-nginx
        namespace: ingress-nginx
        create_namespace: true

# postgres start
    - name: share directory exists
      ansible.builtin.file:
        path: "{{ pg_share }}"
        state: directory
        mode: "{{ all_permission }}"
        owner: root
        group: root

    - name: share in /etc/exports file
      ansible.builtin.lineinfile:
        path: /etc/exports
        state: present
        line: "{{ pg_share }} {{ pg_options }}"
      #notify: restart NFS server

    - name: export share
      ansible.builtin.command: "exportfs -rav"

    - name: Create a PersistentVolume object from an inline definition
      become: yes
      become_user: cloudshell
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: pgvol
          spec:
            capacity:
              storage: 4Gi
            accessModes:
            - ReadWriteOnce
            persistentVolumeReclaimPolicy: Retain
            nfs:
              server: 192.168.1.4
              path: "{{ pg_share }}" #/home/postgresql
        force: yes

    - name: Create a PersistentVolumeClaim object from an inline definition
      become: yes
      become_user: cloudshell
      kubernetes.core.k8s:
        state: present
        definition:
          kind: PersistentVolumeClaim
          apiVersion: v1
          metadata:
            name: pg-pvc
            namespace: postgresql
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 4Gi
        force: yes
        continue_on_error: true

#    - name: reload nfsd
#      systemd: name="{{ lp_nfsd_reload_service }}" state="reloaded"

#    - name: Install Postgresql helm chart from a repo specifying path
#      become: yes
#      become_user: cloudshell
#      kubernetes.core.helm:
#        chart_repo_url: https://charts.bitnami.com/bitnami
#        chart_ref: postgresql 
#        state: present
#        name: dev-pg
#        namespace: postgresql
#        create_namespace: true
        #release_values:
          #primary.persistence.existingClaim: pg-pvc
          #auth.postgresPassword: pgpass

    - name: Create a ConfigMap object from an inline definition
      become: yes
      become_user: cloudshell
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: tcp-services
            namespace: ingress-nginx
          data:
            5432: "postgresql/dev-pg-postgresql:5432"

    # Patch existing ingress-nginx-controller 
    - name: Patch existing ingress-nginx-controller 
      become: yes
      become_user: cloudshell
      kubernetes.core.k8s:
        state: patched
        namespace: ingress-nginx
        kind: Deployment
        name: ingress-nginx-controller 
        definition:
          spec:
            template:
              spec:
                containers:
                - name: controller
                  ports:
                   - containerPort: 5432
                     hostPort: 5432

    - name: Patch existing ingress service
      become: yes
      become_user: cloudshell
      kubernetes.core.k8s:
        state: patched
        namespace: ingress-nginx
        name: ingress-nginx-controller
        kind: Service
        definition:
          spec:
            type: LoadBalancer
            ports:
              - name: postgres
                port: 5432
                targetPort: 5432
                protocol: TCP

# postgres end